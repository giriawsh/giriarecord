(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{380:function(s,t,a){"use strict";a.r(t);var n=a(42),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"逻辑表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#逻辑表达式"}},[s._v("#")]),s._v(" 逻辑表达式")]),s._v(" "),a("h3",{attrs:{id:"逻辑与"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#逻辑与"}},[s._v("#")]),s._v(" 逻辑与&&")]),s._v(" "),a("p",[s._v("&&运算符可以从三个不同的层次进行理解")]),s._v(" "),a("ol",[a("li",[s._v("当操作数都是布尔值时，&&对两个值执行AND操作。返回true或false")])]),s._v(" "),a("p",[s._v("关系运算符的优先级比"),a("code",[s._v("&&")]),s._v("和"),a("code",[s._v("||")]),s._v("要高")]),s._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[s._v('&&可以对真值和假值（false, null, undefined, 0, -0, NaN,  ""）进行AND操作。返回真值或假值')])]),s._v(" "),a("p",[s._v("在JS中任何希望使用布尔值的地方，表达式和语句都会将其当做真值或假值来对待。")]),s._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[s._v("运算符首先计算左操作数的值（即&&左侧的表达式），如果是假值，&&此时简单地"),a("u",[s._v("返回左操作数的值")]),s._v("；如果左操作数是真值，&&将"),a("u",[s._v("计算右操作数的值并将其返回")]),s._v("作为整个表达式的计算结果。")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" o "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" x"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" p "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\no "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("x "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// => 1 左值是真值，计算了右值后返回")]),s._v("\np "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("x "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// => null")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("&&的行为有时被称作"),a("strong",[s._v("短路")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("stop")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("等价于")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("stop")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("当&&右侧的表达式具有副作用（赋值、递增、递减、函数调用表达式）时，要小心，因为这些表达式的执行依赖于左操作数的计算结果。")]),s._v(" "),a("blockquote",[a("p",[s._v("右侧有副作用应尽量避免")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\na"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// => 0 因为a++返回0，是个假值")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nb"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" b"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// => 2 b++返回1，是个真值，返回右值")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" c "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nc "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" c"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// => 2 c++返回2")]),s._v("\nc "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// => 3")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" d "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nd "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("b "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" d "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// => 5 赋值返回计算后结果")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" e "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("e "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" e "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// => ƒ (){return --e;} 函数调用返回函数调用")]),s._v("\ne "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// => 1 但是函数调用并没有执行")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),a("p",[s._v("大多数情况下，&&仅用来对真值和假值做布尔运算")])]),s._v(" "),a("h3",{attrs:{id:"逻辑或"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#逻辑或"}},[s._v("#")]),s._v(" 逻辑或||")]),s._v(" "),a("p",[s._v("大多数情况下知识做简单OR运算。")]),s._v(" "),a("p",[s._v("首先计算第一个操作数的值，如果是真值，"),a("u",[s._v("返回这个真值")]),s._v("；否则，计算第二个操作数的值，"),a("u",[s._v("并返回这个表达式的计算结果")]),s._v("。")]),s._v(" "),a("blockquote",[a("p",[s._v("同样应当避免右操作数包含一些具有副作用的表达式")])]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),a("p",[s._v("这个运算符最常用的方式是用来从一组备选表达式中选出第一个真值表达式。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://giriawsh-bucket.oss-cn-beijing.aliyuncs.com/img/20201015122340.png",alt:"image-20201015122333585"}})]),s._v(" "),a("p",[s._v("这种用法通常用在函数体内，用来给参数提供默认值")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://giriawsh-bucket.oss-cn-beijing.aliyuncs.com/img/20201015122407.png",alt:"image-20201015122407148"}})])]),s._v(" "),a("h3",{attrs:{id:"逻辑非"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#逻辑非"}},[s._v("#")]),s._v(" 逻辑非！")]),s._v(" "),a("p",[s._v("一元运算符，目的是将操作数的布尔值进行求反。")]),s._v(" "),a("p",[s._v("！首先将其操作数转换为布尔值（&&和||并不会这么做），然后再对布尔值求反。")]),s._v(" "),a("p",[s._v("！ 总是返回true或者false")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),a("p",[s._v("可以通过两次逻辑非运算来得到一个值的等价布尔值："),a("code",[s._v("!!x")])])]),s._v(" "),a("p",[s._v("！具有很高的优先级")]),s._v(" "),a("p",[s._v("有这样两个恒等式：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("p"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v("q"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("p "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("q\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("p"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("||")]),s._v("q"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("p "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("q\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h2",{attrs:{id:"赋值表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#赋值表达式"}},[s._v("#")]),s._v(" 赋值表达式")]),s._v(" "),a("p",[s._v("JS使用"),a("code",[s._v("=")]),s._v("来给变量或者属性赋值。"),a("code",[s._v("=")]),s._v("运算符希望它的左操作数是一个左值（一个变量或者对象属性），它的右操作数可以是任意类型的任意值。")]),s._v(" "),a("p",[s._v("赋值表达式的副作用时：右操作数的值赋值给左侧的变量或者对象属性，后续对这个变量和对象属性的引用都将得到这个值。")]),s._v(" "),a("p",[a("code",[s._v("=")]),s._v("具有非常低的优先级。")]),s._v(" "),a("p",[s._v("赋值操作符的结合性是从右至左。因此可以这样给多个变量赋值：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("j"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("k"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("h3",{attrs:{id:"带操作的赋值运算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#带操作的赋值运算"}},[s._v("#")]),s._v(" 带操作的赋值运算")]),s._v(" "),a("p",[s._v("就是这些东西：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://giriawsh-bucket.oss-cn-beijing.aliyuncs.com/img/20201015165516.png",alt:"image-20201015165516326"}})]),s._v(" "),a("p",[s._v("在大多数情况下：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("a op"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" b\n等价于\na "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" a op b\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("第一行a被计算了一次，第二行a计算了两次。")]),s._v(" "),a("p",[s._v("只有在a包含具有副作用的表达式（比如函数调用和赋值操作）的时候，两者才不等价。")]),s._v(" "),a("p",[s._v("举个例子：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\ndata"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("第二个i会被加两次。")]),s._v(" "),a("h2",{attrs:{id:"表达式计算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#表达式计算"}},[s._v("#")]),s._v(" 表达式计算")]),s._v(" "),a("p",[s._v("JS可以解释运行由JS源代码组成的字符串，并产生一个值。JS通过全局函数eval()来完成这个工作。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("eval")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"3+2"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// => 5")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),a("p",[s._v("动态判断源代码中的字符串是一种强大的语言特性，几乎没有必要在实际中应用。")]),s._v(" "),a("p",[s._v("如果使用了eval，应当仔细考虑是否真的需要。")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://giriawsh-bucket.oss-cn-beijing.aliyuncs.com/img/20201015170353.png",alt:"image-20201015170353743"}})]),s._v(" "),a("p",[a("img",{attrs:{src:"https://giriawsh-bucket.oss-cn-beijing.aliyuncs.com/img/20201015170402.png",alt:"image-20201015170402753"}})]),s._v(" "),a("h3",{attrs:{id:"eval-基本用法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#eval-基本用法"}},[s._v("#")]),s._v(" eval()基本用法")]),s._v(" "),a("p",[s._v("eval()只有一个参数")]),s._v(" "),a("ul",[a("li",[s._v("如果传入的参数不是字符串，它直接返回这个参数")]),s._v(" "),a("li",[s._v("如果传入字符串，它会把字符串当成JS代码进行编译。\n"),a("ul",[a("li",[s._v("如果编译失败，抛出一个语法错误异常\n"),a("ul",[a("li",[s._v("这个异常将把调用传递给eval()")])])]),s._v(" "),a("li",[s._v("如果编译成功，则开始执行这段代码，并返回空字符串中的最后一个表达式或语句的值\n"),a("ul",[a("li",[s._v("如果最后一个表达式或语句没有值，则最终返回undefined")])])])])])]),s._v(" "),a("p",[s._v("关于eval()最重要的是，"),a("strong",[s._v("它使用了调用它的变量作用域环境。")])]),s._v(" "),a("div",{staticClass:"language-eval line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('var x = 1;\neval("y = x + 1")\ny // => 2\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[a("strong",[s._v("如果在最顶层代码中调用eval()，它会作用域全局变量和全局函数")]),s._v("。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    x"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("eval")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("eval")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("102")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[s._v("eval字符串必须在语法上讲得通")]),s._v(" "),a("p",[s._v("比如"),a("code",[s._v('eval("return;")')]),s._v("是没有意义的，因为return只有在函数中才起作用")])]),s._v(" "),a("p",[s._v("事实上，"),a("strong",[s._v("eval的字符串执行时的上下文环境和调用函数的上下文环境是一样的")]),s._v("。这不能使其作为函数的一部分来运行。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://giriawsh-bucket.oss-cn-beijing.aliyuncs.com/img/20201015172825.png",alt:"image-20201015172824953"}})]),s._v(" "),a("h3",{attrs:{id:"全局eval"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全局eval"}},[s._v("#")]),s._v(" 全局eval()")]),s._v(" "),a("p",[s._v("eval()"),a("u",[s._v("具有更改局部变量的能力")]),s._v("，这对于JS优化器来说是一个很大的问题。")]),s._v(" "),a("p",[s._v("为了让JS解释器的实现更加简化，"),a("strong",[s._v("ECMAScript3")]),s._v("规定任何解释器都不允许对eval赋予别名。否则抛出一个EvalError异常。")]),s._v(" "),a("p",[s._v("实际上，大多数实现中，当通过别名调用时，eval()会将其字符串当成"),a("u",[s._v("顶层的全局代码")]),s._v("来执行。")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("当成顶层的全局代码执行不会影响函数内的代码优化")]),s._v(" "),a("p",[s._v("执行的代码可能会定义新的全局变量和全局函数，或者给全局变量赋值。")]),s._v(" "),a("p",[s._v("但是却不能使用或修改主调函数中的局部变量。")]),s._v(" "),a("p",[s._v("因此，这不会影响到函数内的代码优化。")])]),s._v(" "),a("p",[a("strong",[s._v("ECMAScript5")]),s._v("是"),a("u",[s._v("反对使用EvalError")]),s._v("的，并且规范了eval()的行为。")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("直接eval")]),s._v(" "),a("p",[s._v("当直接使用非限定的eval名称来调用eval()函数时，被称为直接eval。")]),s._v(" "),a("p",[s._v("（就是不给它重新赋值给别的名字。）")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" f "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" eval"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//使用了别名调用的eval")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" g "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" f"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("直接调用eval()时，它总是在调用它的上下文作用域内执行。")])]),s._v(" "),a("li",[a("p",[s._v("其他的间接调用则使用全局对象作为其上下文作用域，并且"),a("u",[s._v("无法读、写、定义局部变量和函数")]),s._v("。")])])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://giriawsh-bucket.oss-cn-beijing.aliyuncs.com/img/20201018171256.png",alt:"image-20201018171249320"}})]),s._v(" "),a("p",[s._v("如果是全局的话，在外层console x或者y时会得到修改，否侧不会。")]),s._v(" "),a("p",[s._v("全局eval是一种很有用的特性，它允许我们执行那些对上下文没有任何依赖的全局脚本代码段（其实是一件很神奇的事，明明在函数内部使用，却最终影响的只有全局）")]),s._v(" "),a("h3",{attrs:{id:"严格eval"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#严格eval"}},[s._v("#")]),s._v(" 严格eval()")]),s._v(" "),a("p",[a("strong",[s._v("ECMAScript5严格模式")]),s._v("下调用eval()时，eval执行的代码段可以查询或更改局部变量，但不能在局部作用域中定义新的变量或函数。")]),s._v(" "),a("p",[s._v("且将“eval”列为保留字，不能用一个别名覆盖eval()函数。变量名、函数名、函数参数或者异常捕获的参数都不能取名为eval。")]),s._v(" "),a("p",[s._v("（由于无法进行间接赋值，自然不可能对全局产生影响）")]),s._v(" "),a("h4",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" "),a("strong",[s._v("总结")]),s._v("：")]),s._v(" "),a("p",[a("strong",[s._v("ECMAScript3")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("规定任何解释器都不允许对eval赋予别名。否则抛出一个EvalError异常。")])]),s._v(" "),a("li",[a("p",[s._v("大多数实现中，当通过别名调用时，eval()会将其字符串当成"),a("u",[s._v("顶层的全局代码")]),s._v("来执行。")])]),s._v(" "),a("li",[a("p",[s._v("可能会定义新的全局变量和全局函数，或者给全局变量赋值。")])]),s._v(" "),a("li",[a("p",[s._v("不能使用或修改主调函数中的局部变量。")])])]),s._v(" "),a("p",[a("strong",[s._v("ECMAScript5")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("反对使用EvalError。")])]),s._v(" "),a("li",[a("p",[s._v("直接调用eval()时，它总是在调用它的上下文作用域内执行。")])]),s._v(" "),a("li",[a("p",[s._v("其他的间接调用则使用全局对象作为其上下文作用域，并且"),a("u",[s._v("无法读、写、定义局部变量和函数")]),s._v("。")])])]),s._v(" "),a("p",[a("strong",[s._v("ECMAScript5严格模式")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("eval执行的代码段可以查询或更改局部变量，但不能在局部作用域中定义新的变量或函数。")])]),s._v(" "),a("li",[a("p",[s._v("将“eval”列为保留字，任何东西都不能取名为eval")])]),s._v(" "),a("li",[a("p",[s._v("由于无法进行间接赋值，自然不可能对全局产生影响")])])]),s._v(" "),a("h2",{attrs:{id:"其他运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他运算符"}},[s._v("#")]),s._v(" 其他运算符")]),s._v(" "),a("h3",{attrs:{id:"条件运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#条件运算符"}},[s._v("#")]),s._v(" 条件运算符?:")]),s._v(" "),a("p",[s._v("唯一一个三元运算符。操作数可以是任意类型。")]),s._v(" "),a("p",[s._v("典型场景，判断一个变量是否有定义（并拥有一个有意义的真值）。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://giriawsh-bucket.oss-cn-beijing.aliyuncs.com/img/20201018174526.png",alt:"image-20201018174526667"}})]),s._v(" "),a("h3",{attrs:{id:"typeof运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#typeof运算符"}},[s._v("#")]),s._v(" typeof运算符")]),s._v(" "),a("p",[s._v("一元运算符，操作数可以是任意类型。")]),s._v(" "),a("p",[s._v("返回值 表示操作数类型的一个字符串。")]),s._v(" "),a("p",[s._v("typeof运算符可以带上圆括号，让typeof看起来像一个函数名，而不是一个运算符关键字：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("typeof(i);\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://giriawsh-bucket.oss-cn-beijing.aliyuncs.com/img/20201018174805.png",alt:"image-20201018174805341"}})]),s._v(" "),a("p",[s._v("如果想将null和普通对象区分开，必须针对特殊值显式检测。")]),s._v(" "),a("p",[s._v("对于宿主对象来说，typeof可能并不返回object，而返回字符串。")]),s._v(" "),a("blockquote",[a("p",[s._v("但实际上客户端JS中的大多数宿主对象都是object类型。")])]),s._v(" "),a("p",[s._v("对于所有对象和数组的typeof结果都是object，因此它对于区分对象和其他原始值来说是很有帮助的。")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("区分方法")]),s._v(" "),a("ul",[a("li",[s._v("typeof")])]),s._v(" "),a("p",[s._v("区分对象和其他原始值")]),s._v(" "),a("ul",[a("li",[s._v("instanceof、class特性、constructor属性")])]),s._v(" "),a("p",[s._v("区别对象的类")])]),s._v(" "),a("p",[s._v("尽管JS中的函数是对象的一种，但typeof还是将特殊特殊对待，返回function。")]),s._v(" "),a("p",[s._v("在JS中，函数和“可执行的对象”(callable object)有着微妙的区别。")]),s._v(" "),a("ul",[a("li",[s._v("所有函数都是可执行的。")]),s._v(" "),a("li",[s._v("对象也有可能是可执行的，可以像调用函数一样调用它，但是它并不是一个真正的函数。")])]),s._v(" "),a("p",[s._v("ES3规范：对于所有"),a("strong",[s._v("内置可执行对象")]),s._v("，typeof返回function")]),s._v(" "),a("p",[s._v("ES5规范："),a("strong",[s._v("所有可执行对象（包括内置对象和宿主对象）")]),s._v("，typeof返回function")]),s._v(" "),a("blockquote",[a("p",[s._v("大多数浏览器厂商都将JS的"),a("u",[s._v("原生函数对象")]),s._v("当成它们的"),a("u",[s._v("宿主对象")]),s._v("。")])]),s._v(" "),a("h4",{attrs:{id:"内置对象、宿主对象、原生对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内置对象、宿主对象、原生对象"}},[s._v("#")]),s._v(" *内置对象、宿主对象、原生对象")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects",target:"_blank",rel:"noopener noreferrer"}},[s._v("JS标准内置对象清单"),a("OutboundLink")],1)]),s._v(" "),a("ol",[a("li",[a("p",[s._v("内置（Build-in）对象与原生（Naitve）对象的区别在于：前者总是在"),a("u",[s._v("引擎初始化阶段就被创建好的对象")]),s._v("，是后者的一个子集；而后者"),a("u",[s._v("包括了一些在运行过程中动态创建的对象")]),s._v("。")])]),s._v(" "),a("li",[a("p",[s._v("宿主对象不是引擎的原生对象，而是由宿主框架通过某种机制注册到JavaScript引擎中的对象。")])]),s._v(" "),a("li",[a("p",[s._v("一些宿主会把自己提供的对象／构造器也称为“原生对象”，例如Internet Explorer 7就把它提供的XMLHttpRequest()称为原生的——与此相对的是在它的更早先版本中通过“new ActiveXObject('Microsoft.XMLHTTP')”这样的方法创建的对象。这种情况下，读者应注意到“宿主的原生对象”与“引擎的原生对象”之间的差异。")])])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://giriawsh-bucket.oss-cn-beijing.aliyuncs.com/img/20201018220006.webp",alt:"img"}})]),s._v(" "),a("h5",{attrs:{id:"一、原生对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、原生对象"}},[s._v("#")]),s._v(" 一、原生对象：")]),s._v(" "),a("p",[s._v("ECMA-262 把原生对象（native object）定义为“独立于宿主环境的 ECMAScript 实现提供的对象”。")]),s._v(" "),a("p",[s._v("Object、Function、Array、String、Boolean、Number、Date、RegExp、Error、EvalError、RangeError、ReferenceError、SyntaxError、TypeError、URIError、ActiveXObject(服务器方面)、Enumerator(集合遍历类)、RegExp（正则表达式）")]),s._v(" "),a("p",[s._v("由此可以看出，简单来说，原生对象就是 ECMA-262 定义的类（引用类型）。")]),s._v(" "),a("h5",{attrs:{id:"二、内置对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、内置对象"}},[s._v("#")]),s._v(" 二、内置对象")]),s._v(" "),a("p",[s._v("ECMA-262 把内置对象（built-in object）定义为“由 ECMAScript 实现提供的、独立于宿主环境的所有对象，在 ECMAScript 程序开始执行时出现”。这意味着"),a("u",[s._v("开发者不必明确实例化内置对象，它已被实例化了。")])]),s._v(" "),a("p",[s._v("每个内置对象都是原生对象。")]),s._v(" "),a("h5",{attrs:{id:"三、宿主对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、宿主对象"}},[s._v("#")]),s._v(" 三、宿主对象")]),s._v(" "),a("p",[s._v("何为“宿主对象”？ ECMAScript中的“宿主”当然就是我们网页的运行环境，即“操作系统”和“浏览器”。所有非原生对象都是宿主对象（host object），即由 ECMAScript 实现的"),a("u",[s._v("宿主环境提供的对象")]),s._v("。")]),s._v(" "),a("p",[s._v("所有的 BOM 和 DOM 对象都是宿主对象。因为其对于不同的“宿主”环境所展示的内容不同。其实说白了就是，ECMAScript官方未定义的对象都属于宿主对象，因为其未定义的对象大多数是自己通过ECMAScript程序创建的对象。")]),s._v(" "),a("h3",{attrs:{id:"delete运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#delete运算符"}},[s._v("#")]),s._v(" delete运算符")]),s._v(" "),a("p",[s._v("delete是一元操作符，它用来删除对象属性或者数组元素。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" o "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" y"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("delete")]),s._v(" o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"x"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// => false")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("delete")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// => false注意这里的2是序号，也就是说a[2]不在a中了")]),s._v("\na "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// =>[1, 2, 空]")]),s._v("\na"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// => 3但是a的长度却没有改变 删除操作留下了一个洞")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("删除属性或者数组元素不仅仅是设置了一个undefined的值。")]),s._v(" "),a("p",[s._v("删除后这个元素不存在了，读取一个不存在的值将返回undefined，但是可以通过in运算符来检测这个属性是否在对象中存在。")]),s._v(" "),a("p",[s._v("delete希望操作数是一个左值。")]),s._v(" "),a("ul",[a("li",[s._v("不是左值，delete不进行任何操作，且返回true")]),s._v(" "),a("li",[s._v("是左值，delete将试图删除这个指定的左值\n"),a("ul",[a("li",[s._v("删除成功，delete返回true（包括删除不存在的属性）")])])])]),s._v(" "),a("p",[s._v("一些不可删除的属性：")]),s._v(" "),a("ol",[a("li",[s._v("一些内置核心和客户端属性")]),s._v(" "),a("li",[s._v("用户通过var语句声明的变量不能删除")]),s._v(" "),a("li",[s._v("通过function语句定义的函数和函数参数。")])]),s._v(" "),a("p",[a("strong",[s._v("ES5严格模式")]),s._v("中，如果delete的操作数是非法的（例如变量、函数、函数参数），delete操作将抛出一个语法错误。")]),s._v(" "),a("p",[s._v("只有操作数是一个"),a("u",[s._v("属性访问表达式")]),s._v("的时候它才会正常工作。")]),s._v(" "),a("p",[s._v("delete删除不可配置属性:")]),s._v(" "),a("ul",[a("li",[s._v("严格模式下，会抛出一个类型错误异常")]),s._v(" "),a("li",[s._v("非严格模式下，不会报错，只是简单地返回false，以表明操作数不能执行删除操作。")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://giriawsh-bucket.oss-cn-beijing.aliyuncs.com/img/20201018221631.png",alt:"image-20201018221631337"}})]),s._v(" "),a("p",[s._v("关于最后这一点，我们在第三章的全局对象属性中有提到：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://giriawsh-bucket.oss-cn-beijing.aliyuncs.com/img/20201018222255.png",alt:"image-20201018222255610"}})]),s._v(" "),a("h3",{attrs:{id:"void运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#void运算符"}},[s._v("#")]),s._v(" void运算符")]),s._v(" "),a("p",[s._v("void是一元运算符,它出现在操作数之前，操作数可以是任意类型。")]),s._v(" "),a("p",[s._v("操作数会照常计算，但"),a("u",[s._v("忽略计算结果并返回undefined")]),s._v("。")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),a("p",[s._v("由于void会忽略操作数的值，因此在操作数具有副作用的时候使用void来让程序更具语义。")])]),s._v(" "),a("p",[s._v("这个运算符最常用在客户端的URL——javascript:URL中。在URL中可以写带有副作用的表达式，而void则让浏览器不必显示这个表达式的计算结果。")]),s._v(" "),a("p",[s._v("例如经常在a标签中使用的void运算符：")]),s._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("a")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("href")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')]),s._v("javascript:void window.open();"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("打开一个新窗口"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("当然也可以通过给a标签的onclick绑定一个事件处理程序。")]),s._v(" "),a("h3",{attrs:{id:"逗号运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#逗号运算符"}},[s._v("#")]),s._v(" 逗号运算符")]),s._v(" "),a("p",[s._v("逗号运算符是二元运算符，操作室可以是任意类型。")]),s._v(" "),a("p",[s._v("它首先计算左操作数，然后右操作数，最后返回 右操作数的值。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://giriawsh-bucket.oss-cn-beijing.aliyuncs.com/img/20201018223056.png",alt:"image-20201018223056091"}})]),s._v(" "),a("p",[s._v("总是会计算左侧的表达式，但计算结果会被忽略。")]),s._v(" "),a("p",[s._v("只有左侧表达式更具有副作用，才会使用逗号运算符让代码变得更通顺。")]),s._v(" "),a("p",[s._v("最常用的地方当然是在for循环里了。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" j"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);