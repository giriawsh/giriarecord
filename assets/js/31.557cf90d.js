(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{381:function(s,t,a){"use strict";a.r(t);var n=a(42),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"第五章-语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第五章-语句"}},[s._v("#")]),s._v(" 第五章 语句")]),s._v(" "),a("p",[s._v("表达式在JS中是短语，那么语句就是JS的整句或命令。")]),s._v(" "),a("p",[s._v("表达式计算出一个值，但语句用来执行以使某件事发生。")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("表达式语句和声明语句")]),s._v(" "),a("p",[s._v("赋值和函数调用这些有副作用的表达式，是可以作为单独的语句的，这种把表达式当做语句的用法也称作"),a("strong",[s._v("表达式语句")]),s._v("。")]),s._v(" "),a("p",[a("strong",[s._v("声明语句")]),s._v("用来声明新变量或定义新函数。")])]),s._v(" "),a("p",[s._v("默认情况下，JS解释器依照语句的编写顺序一次执行。JS中有很多语句和"),a("strong",[s._v("控制结构")]),s._v("来改变语句的默认执行顺序。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://giriawsh-bucket.oss-cn-beijing.aliyuncs.com/img/20201019211929.png",alt:"image-20201019211922674"}})]),s._v(" "),a("h2",{attrs:{id:"表达式语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#表达式语句"}},[s._v("#")]),s._v(" 表达式语句")]),s._v(" "),a("p",[s._v("具有副作用的表达式是JS中最简单的语句。")]),s._v(" "),a("ol",[a("li",[s._v("赋值语句是其中一类比较重要的表达式语句：")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("greeting "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ol",{attrs:{start:"2"}},[a("li",[a("code",[s._v("++")]),s._v("和"),a("code",[s._v("--")]),s._v("和赋值语句有关，它们的作用是改变一个变量的值，就像执行一条赋值语句一样。")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("counter"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ol",{attrs:{start:"3"}},[a("li",[s._v("delete运算符的重要作用是删除一个对象的属性，它一般作为语句使用，而不是复杂表达式的一部分。")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("delete")]),s._v(" o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ol",{attrs:{start:"4"}},[a("li",[s._v("函数调用时表达式语句的另一个大类。")])]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("greeting"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nwindow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("close")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("虽然这些客户端函数调用都是表达式，但是它们都会Web浏览器造成了一些影响，所以我们认为它们也是语句。")]),s._v(" "),a("p",[s._v("调用一个没有任何副作用的函数时没有意义的，除非它是复杂表达式或赋值语句的一部分。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("Math"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cos")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 算完即丢弃没有意义")]),s._v("\n\ncx "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Marg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cos")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//赋值，以便将来使用")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h2",{attrs:{id:"复合语句和空语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#复合语句和空语句"}},[s._v("#")]),s._v(" 复合语句和空语句")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("复合语句")]),s._v(" "),a("p",[s._v("JS中可以将多条语句联合在一起，形成一条"),a("strong",[s._v("复合语句")]),s._v("。")]),s._v(" "),a("p",[s._v("只须用花括号将多条语句括起来即可。")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://giriawsh-bucket.oss-cn-beijing.aliyuncs.com/img/20201019212612.png",alt:"image-20201019212612679"}})]),s._v(" "),a("p",[s._v("关于语句块：")]),s._v(" "),a("ol",[a("li",[s._v("语句块的结尾不需要分号")]),s._v(" "),a("li",[s._v("语句块中的行有缩进，但不是必须的")]),s._v(" "),a("li",[s._v("J"),a("u",[s._v("S中没有块级作用域。在语句块中声明的变量并不是语句块私有的。")])])]),s._v(" "),a("p",[s._v("在JS中，当希望多条语句被当做一条语句使用时，使用复合语句来替代。")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("空语句")]),s._v(" "),a("p",[a("strong",[s._v("空语句")]),s._v("(empty statement)则恰好相反，它允许包含0条语句的语句。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v(";\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("p",[s._v("JS执行空语句时不会执行任何动作。但当创建一个具有空循环体的循环时，空语句很有作用。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//初始化一个数组a")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* empty */")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("如果有特殊目的需要使用空语句，"),a("u",[s._v("最好在代码中添加注释")]),s._v("。")]),s._v(" "),a("h2",{attrs:{id:"声明语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#声明语句"}},[s._v("#")]),s._v(" 声明语句")]),s._v(" "),a("p",[a("code",[s._v("var")]),s._v("和"),a("code",[s._v("function")]),s._v("都是声明语句。它们声明或定义变量或函数。这些语句定义标识符（变量名和函数名）并给其赋值，这些标识符可以在程序中任意地方使用。")]),s._v(" "),a("h3",{attrs:{id:"var"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#var"}},[s._v("#")]),s._v(" var")]),s._v(" "),a("p",[s._v("var语句用来声明一个或者多个变量，语法如下：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" name_1 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" value_1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" name_n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" value_n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("列表中的每一个变量都可以带有初始化表达式。")]),s._v(" "),a("ul",[a("li",[s._v("如果var出现在函数体内，那么它定义的是一个局部变量，其作用域就是这个函数")]),s._v(" "),a("li",[s._v("如果var出现在顶层代码中，它声明的是全局变量，在整个JS程序中都是可见的。")])]),s._v(" "),a("p",[s._v("全局变量是全局对象的属性。和其他全局对象属性不同的是，var声明的变量是无法通过delete删除的。")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("如果var语句中变量没有指定初始化表达式，那么这个变量的值初始为undefined。")])]),s._v(" "),a("li",[a("p",[s._v("变量在声明它们的脚本或函数中都是有定义的，变量声明语句会被“提前”至脚本或者函数的顶部。")]),s._v(" "),a("ul",[a("li",[s._v("但是初始化的操作还是在原来var语句的位置执行，在声明语句之前变量的值都是undefined")])])]),s._v(" "),a("li",[a("p",[s._v("多次声明同一个变量是无所谓的。")])])]),s._v(" "),a("h3",{attrs:{id:"function"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#function"}},[s._v("#")]),s._v(" function")]),s._v(" "),a("p",[s._v("function用来定义函数。函数定义也可以写成语句的形式。")]),s._v(" "),a("p",[s._v("下面是两种定义写法")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("f")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("x")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" x"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//将表达式赋值给一个变量")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("m")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("x")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" x"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//含有变量名的语句")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[s._v("不可用delete删除")]),s._v(" "),a("p",[s._v("上面例子中的f和m函数不可通过delete删除，将会返回false。")])]),s._v(" "),a("p",[s._v("函数声明语句语法：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("funcname")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("arg1 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" arg2 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("...")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" argn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\tstatements\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("在定义函数时，"),a("u",[s._v("并不执行函数体内的语句")]),s._v("，它和调用函数时待执行的新函数对象相关联。")]),s._v(" "),a("p",[a("strong",[s._v("注意")]),s._v("： function语句里的花括号是必须的。")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("函数声明语句通常出现在JS代码的"),a("strong",[s._v("最顶层")]),s._v("，也可以嵌套在其他函数体内。")])]),s._v(" "),a("li",[a("p",[s._v("在嵌套时，函数声明只能出现在所嵌套函数的"),a("strong",[s._v("顶部")]),s._v("。")])])]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("函数定义只能出现在顶层")]),s._v(" "),a("p",[s._v("也就是说，函数定义不能出现在if、while或者其他任何语句中，正是因为声明位置的这种限制，ECMA标准规范"),a("u",[s._v("并没有将函数声明归类为真正的语句")]),s._v("。")]),s._v(" "),a("p",[s._v("有一些JS实现允许出现语句的地方都可以进行函数声明，但是不具备可移植性。")])]),s._v(" "),a("p",[s._v("尽管函数声明语句和函数定义表达式包含相同的函数名，但两者是不同的。")]),s._v(" "),a("ul",[a("li",[s._v("两种方式都创建了新的函数对象")]),s._v(" "),a("li",[s._v("函数声明语句（未使用var）中的函数名是一个变量名，变量指向函数对象。\n"),a("ul",[a("li",[s._v("函数名称和函数体均提前。")]),s._v(" "),a("li",[s._v("脚本中所有函数和函数中所有嵌套的函数都会在当前上下文中其他代码"),a("u",[s._v("之前声明")])]),s._v(" "),a("li",[s._v("也就是说"),a("u",[s._v("可以在声明一个JS函数之前调用它")]),s._v("。")])])]),s._v(" "),a("li",[s._v("函数定义语句（使用了var）中的函数被显式“提前”到了脚本或函数的顶部，因为它们在整个脚本和函数内都是可见的。\n"),a("ul",[a("li",[s._v("只有变量声明提前了，但是变量的初始化代码仍然在原来的位置。")])])])]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("使用函数声明语句可以提前调用")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//报错")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("m")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//能够成功调用")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[s._v("f")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("x")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" x"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("m")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("x")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" x"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])])]),s._v(" "),a("p",[s._v("和var语句一样，函数声明语句创建的变量也是"),a("strong",[s._v("无法删除")]),s._v("的。")]),s._v(" "),a("p",[s._v("但是这些变量"),a("strong",[s._v("不是只读的，变量值可以重写")]),s._v("。")]),s._v(" "),a("h2",{attrs:{id:"条件语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#条件语句"}},[s._v("#")]),s._v(" 条件语句")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("定义")]),s._v(" "),a("p",[a("strong",[s._v("条件语句")]),s._v("：通过判断指定表达式的值来决定执行还是跳过某些语句")])]),s._v(" "),a("h3",{attrs:{id:"if"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#if"}},[s._v("#")]),s._v(" if")]),s._v(" "),a("p",[s._v("第一种形式：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("expression"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\tstatement\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("如果expression计算结果是"),a("strong",[s._v("真值")]),s._v('（非null/undefined/false/0/""/NaN），那么就执行statement')]),s._v(" "),a("p",[s._v("第二种形式：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("expression"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\tstatement1\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n\tstatement2\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("JS中if、else匹配规则是，"),a("u",[s._v("else总是和就近的if语句匹配")]),s._v("。")]),s._v(" "),a("p",[s._v("使用花括号可让代码结构更加清晰。")]),s._v(" "),a("h3",{attrs:{id:"else-if"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#else-if"}},[s._v("#")]),s._v(" else if")]),s._v(" "),a("p",[s._v("只不过是多条if/else语句连在一起时的一种惯用写法")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://giriawsh-bucket.oss-cn-beijing.aliyuncs.com/img/20201021004511.png",alt:"image-20201021004511513"}})]),s._v(" "),a("p",[s._v("但是显然"),a("strong",[s._v("使用else if写法更清晰也更可取")]),s._v("。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://giriawsh-bucket.oss-cn-beijing.aliyuncs.com/img/20201021004544.png",alt:"image-20201021004544128"}})]),s._v(" "),a("p",[a("img",{attrs:{src:"https://giriawsh-bucket.oss-cn-beijing.aliyuncs.com/img/20201021004552.png",alt:"image-20201021004552504"}})]),s._v(" "),a("h3",{attrs:{id:"switch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#switch"}},[s._v("#")]),s._v(" switch")]),s._v(" "),a("p",[s._v("适合处理所有的分支都依赖于同一个表达式的值的情况。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("expression"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\tstatements\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("代码块中可以使用多个由case关键字表示的代码片段，紧跟一个表达式和一个冒号。")]),s._v(" "),a("ol",[a("li",[s._v("首先计算expression")]),s._v(" "),a("li",[s._v("查找case中的表达式是否和expression的值相同（"),a("strong",[s._v("这里的相同是按照"),a("code",[s._v("===")]),s._v("进行比较的")]),s._v("）")]),s._v(" "),a("li",[s._v("匹配到case，执行对象代码块；匹配不到case，执行"),a("code",[s._v("default:")]),s._v("；没有"),a("code",[s._v("default:")]),s._v(",跳过它的所有代码块。")])]),s._v(" "),a("blockquote",[a("p",[a("code",[s._v("default:")]),s._v("标签一般出现在switch的末尾，但实际上，"),a("u",[s._v("可以放置在switch语句内的任何地方")]),s._v("。")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://giriawsh-bucket.oss-cn-beijing.aliyuncs.com/img/20201021005506.png",alt:"image-20201021005506528"}})]),s._v(" "),a("p",[s._v("break语句可以使解释器跳出switch语句或循环语句。")]),s._v(" "),a("p",[s._v("如果在函数中使用switch，可以使用return来代替break。")]),s._v(" "),a("p",[s._v("下面一个例子，根据值的类型将该值转换为字符串：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://giriawsh-bucket.oss-cn-beijing.aliyuncs.com/img/20201021005723.png",alt:"image-20201021005723060"}})]),s._v(" "),a("p",[s._v("case关键字后跟随数字和字符串直接量是比较常见的，但是ECMA标准"),a("u",[s._v("允许每个case关键字跟随任意的表达式")]),s._v("。")]),s._v(" "),a("p",[s._v("由于case匹配是"),a("code",[s._v("===")]),s._v("比较，因此表达式和case的匹配并不会做任何类型转换。")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("js中的case表达式是在运行时计算的")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://giriawsh-bucket.oss-cn-beijing.aliyuncs.com/img/20201021005919.png",alt:"image-20201021005919452"}})])]),s._v(" "),a("p",[s._v("由于每次执行switch时，并不是所有的case都能执行到，"),a("u",[s._v("因此应当避免带有副作用的case表达式")]),s._v("。（例如函数调用表达式和赋值表达式）")]),s._v(" "),a("p",[s._v("最安全的做法是在case表达式中使用常量表达式。")]),s._v(" "),a("h2",{attrs:{id:"循环语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#循环语句"}},[s._v("#")]),s._v(" 循环语句")]),s._v(" "),a("p",[s._v("循环语句就是程序路径的一个回路。其中最常用的循环就是对数组元素的遍历。")]),s._v(" "),a("h3",{attrs:{id:"while"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#while"}},[s._v("#")]),s._v(" while")]),s._v(" "),a("p",[s._v("和if一样，while语句也是一个基本循环语句，语法如下：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("expression"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\tstatement\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("ol",[a("li",[s._v("首先计算expression的值")]),s._v(" "),a("li",[s._v("如果是假值，跳过statement，执行程序中的吓一跳语句。")]),s._v(" "),a("li",[s._v("如果是真值，JS解释器将执行循环体内的逻辑，然后再次计算表达式expression的值，知道expression的值为假值。")])]),s._v(" "),a("p",[s._v("如果想要让代码可读性更强，"),a("strong",[s._v("应该使用更具语义的变量名。")])]),s._v(" "),a("h3",{attrs:{id:"do-while"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#do-while"}},[s._v("#")]),s._v(" do/while")]),s._v(" "),a("p",[s._v("在循环的尾部检测循环表达式，这意味着循环体至少会执行一次。语法如下：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v("\n\tstatement\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("expression"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("do循环要求必须使用关键字do来标识循环的开始，用while来标识循环的结尾并进入循环条件判断。")]),s._v(" "),a("p",[s._v("do循环是用分号结尾的。")]),s._v(" "),a("h3",{attrs:{id:"for"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#for"}},[s._v("#")]),s._v(" for")]),s._v(" "),a("p",[s._v("语法如下：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("initialize"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" testl increment"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\tstatement\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("分别负责初始化操作、循环条件判断和计数器变量的更新。")]),s._v(" "),a("p",[s._v("与之等价的while循环：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("initialize"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("text"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\tstatement\n\tincrement"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[s._v("WARNING")]),s._v(" "),a("p",[s._v("在使用continue语句时，while循环和for循环并不等价")])]),s._v(" "),a("ol",[a("li",[a("p",[s._v("初始化表达式应具有副作用（通常是一条赋值语句）。")])]),s._v(" "),a("li",[a("p",[s._v("每次循环执行之前会执行test表达式，如果test计算结果为真，执行statement，最后执行increment。")])]),s._v(" "),a("li",[a("p",[s._v("同样这里的increment表达式也必须具有副作用。通常来讲它不是一个赋值表达式就是一个由"),a("code",[s._v("++")]),s._v("或"),a("code",[s._v("--")]),s._v("运算符构成的表达式。")])])]),s._v(" "),a("p",[s._v("给出一个例子，用for循环来遍历链表数据结构，并返回链表中的最后一个对象。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("tail")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("o")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("next"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" o "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("next"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/* empty */")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("p",[s._v("两个分号必不可少")]),s._v(" "),a("h3",{attrs:{id:"for-in"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#for-in"}},[s._v("#")]),s._v(" for/in")]),s._v(" "),a("p",[s._v("语法如下：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("variable "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\tstatement\t\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("variable通常是一个变量名，也可以是一个可以产生左值的表达式或者一个通过var语句声明的变量，总之是一个"),a("strong",[s._v("适用于赋值表达式左侧的值")]),s._v("。")]),s._v(" "),a("p",[s._v("object是一个表达式，这个表达式的计算结果是一个对象。")]),s._v(" "),a("ol",[a("li",[s._v("JS解释器首先计算object表达式")]),s._v(" "),a("li",[s._v("如果表达式为null或undefined，JS解释器会跳过循环并执行后续的代码")]),s._v(" "),a("li",[s._v("如果表达式为原始值，这个表达式将会转换为与之对应的"),a("u",[s._v("包装对象")]),s._v("，否则expression本身已经是对象。")]),s._v(" "),a("li",[s._v("JS会依次枚举对象的属性来执行循环")]),s._v(" "),a("li",[s._v("在"),a("u",[s._v("每次循环之前，JS都会先计算variable表达式的值")]),s._v("，并"),a("u",[s._v("将属性名（一个字符串）赋值给它")]),s._v("。")])]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("注意")]),s._v(" "),a("p",[s._v("只要for/in循环中的variable的值可以当做赋值表达式的左值，它可以是任意表达式。")]),s._v(" "),a("p",[s._v("每次循环都会计算这个表达式，也就是说，每次循环它计算的值可能不同。")])]),s._v(" "),a("p",[a("strong",[s._v("for/in循环可以用来更方便地遍历对象属性成员")]),s._v("。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" p "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//将属性名字赋值给变量p")]),s._v("\n\tconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//输出每一个属性的值")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("下面这段代码可以将所有对象属性复制至一个数组中：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" o "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" y"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" z"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*empty*/")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// => ["x", "y", "z"]')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("当然for/in循环可以像枚举对象属性一样枚举数组索引。")]),s._v(" "),a("p",[s._v("其实for/in循环并不会遍历对象的所有属性，只有"),a("strong",[s._v("可枚举")]),s._v("的属性才会遍历到。")]),s._v(" "),a("p",[s._v("譬如，JS语言核心所定义的"),a("u",[s._v("内置方法")]),s._v("就不是“可枚举的”。比如所有对象都有方法toString()，但for/in循环并不枚举它。除了内置方法之外，还有很多内置对象的属性也是“不可枚举的”。")]),s._v(" "),a("p",[s._v("代码中定义的所有属性和方法都是可枚举的。（ES5中可以通过特殊手段让可枚举属性变为不可枚举）")]),s._v(" "),a("p",[s._v("对象可以继承其他对象的属性，继承的自定义属性也可以也可以用for/in枚举出来。")]),s._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[s._v("循环中发生删除与新定义")]),s._v(" "),a("p",[s._v("如果for/in的循环体删除了还未枚举的属性，那么这个属性将不会再枚举到。")]),s._v(" "),a("p",[s._v("如果循环体定义了对象的新属性，这些属性通常也不会枚举到。")]),s._v(" "),a("p",[s._v("（然而JS的有些实现是可以枚举那些在循环体中增加的继承属性的）")]),s._v(" "),a("p",[s._v("上面这句话的具体实现？？？")])]),s._v(" "),a("h4",{attrs:{id:"属性枚举的顺序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#属性枚举的顺序"}},[s._v("#")]),s._v(" 属性枚举的顺序")]),s._v(" "),a("p",[a("strong",[s._v("- JS解释器枚举“简单”对象一种交互的属性枚举顺序")])]),s._v(" "),a("p",[s._v("ES规范没有指定for/in循环按照何种顺序来枚举对象属性。")]),s._v(" "),a("p",[s._v("但实际上，主流浏览器厂商的JS实现"),a("u",[s._v("是按照属性定义的先后顺序来枚举简单对象的属性，先定义的属性先枚举")]),s._v("。")]),s._v(" "),a("p",[s._v("如果使用对象直接量的形式创建对象，则将"),a("u",[s._v("按照直接量中属性的出现顺序")]),s._v("枚举。")]),s._v(" "),a("p",[s._v("有一些JS库是依赖于这种枚举顺序的，浏览器厂商不大可能会修改这个顺序。")]),s._v(" "),a("p",[a("strong",[s._v("- 下列情况下枚举的顺序取决于具体的实现：")])]),s._v(" "),a("ul",[a("li",[s._v("对象继承了可枚举属性")]),s._v(" "),a("li",[s._v("对象具有整数数组索引的属性")]),s._v(" "),a("li",[s._v("使用delete删除了对象已有的属性")]),s._v(" "),a("li",[s._v("使用Object.defineProperty()或者类似的方法改变了对象的属性")])]),s._v(" "),a("p",[s._v("除了所有非继承的“自有”属性以外的"),a("strong",[s._v("继承属性")]),s._v("往往都是（但并不是所有JS实现都是如此）可枚举的，而且按照它们定义的顺序进行枚举。")]),s._v(" "),a("p",[s._v("如果对象属性继承自多个“原型”，也就是说它的原型链上有多个对象，那么链上面的每一个原型对象的属性的遍历也是依照特定顺序执行的。")]),s._v(" "),a("p",[s._v("JS的一些（但不是全部）实现依照数字顺序来枚举数组属性，而不是某种特定顺序。")]),s._v(" "),a("p",[s._v("但当数组元素的索引是非数字或数组是稀疏数组（数组索引是不连续的）时它们则按照特定顺序枚举。")]),s._v(" "),a("h2",{attrs:{id:"跳转语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#跳转语句"}},[s._v("#")]),s._v(" 跳转语句")]),s._v(" "),a("p",[s._v("JS中的语句可以命名或带有标签，break和continue可以标识目标循环或者其他语句标签。")]),s._v(" "),a("p",[s._v("return语句让解释器跳出函数体的执行，并提供本次调用的返回值。")]),s._v(" "),a("p",[s._v("throw语句触发或者抛出一个异常，它是与try/catch/finally语句一同使用的，这些语句指定了处理异常单额代码逻辑。当抛出一个异常的时候，程序将跳"),a("strong",[s._v("转至最近的闭合异常处理程序")]),s._v("，这个异常处理程序可以是在同一个函数中或者在更高层的调用栈中。")]),s._v(" "),a("h3",{attrs:{id:"标签语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#标签语句"}},[s._v("#")]),s._v(" 标签语句")]),s._v(" "),a("p",[s._v("语法如下：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("identifier"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("statement\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("strong",[s._v("break")]),s._v("和"),a("strong",[s._v("continue")]),s._v("是JS中唯一可以使用语句标签的语句。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://giriawsh-bucket.oss-cn-beijing.aliyuncs.com/img/20201103165138.png",alt:"image-20201103165131097"}})]),s._v(" "),a("p",[s._v("用作标签的identifier必须是一个合法的JS标识符，而"),a("u",[s._v("不能是一个保留字")]),s._v("。可以使用同一个标识符作为语句标签和作为变量名或函数名。")]),s._v(" "),a("p",[s._v("语句标签只有在它所起作用的语句（当然也可以在它的句子中）内室有定义的。")]),s._v(" "),a("p",[s._v("一个语句标签不能和它内部的语句标签重名。但在两个代码段不相互嵌套的情况下是可以出现同名的语句标签的。")]),s._v(" "),a("p",[s._v("带有标签的额语句还可以带有标签，任何语句可以有很多个标签。")]),s._v(" "),a("h3",{attrs:{id:"break语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#break语句"}},[s._v("#")]),s._v(" break语句")]),s._v(" "),a("p",[s._v("单独使用break语句的作用是立即退出最内层的循环或switch语句。这种形式的break只有出现在这类语句中才是合法的。")]),s._v(" "),a("p",[s._v("JS中同样允许break关键字后面跟随一个语句标签（只有标识符，没有冒号）")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),s._v(" labelname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("当没有任何闭合语句块指定了break所用的标签，会产生一个语法错误。")]),s._v(" "),a("p",[s._v("当使用这种形式的break语句时，带标签的语句不应该是循环或者switch语句（因为break可以跳出任何闭合的语句块）")]),s._v(" "),a("p",[s._v("当希望通过break来跳出非就近的循环体或者switch语句时，就会用到带标签的break语句：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://giriawsh-bucket.oss-cn-beijing.aliyuncs.com/img/20201104234725.png",alt:"image-20201104234718169"}})]),s._v(" "),a("p",[a("img",{attrs:{src:"https://giriawsh-bucket.oss-cn-beijing.aliyuncs.com/img/20201104234731.png",alt:"image-20201104234731364"}})]),s._v(" "),a("p",[s._v("不管break语句带不带标签，它的控制权都无法越过函数的边界。")]),s._v(" "),a("p",[s._v("对于一条带标签的函数定义语句来说，不能从函数内部通过这个标签来跳转到函数外部。")]),s._v(" "),a("h3",{attrs:{id:"continue语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#continue语句"}},[s._v("#")]),s._v(" continue语句")]),s._v(" "),a("p",[s._v("continue与break类似，不是退出循环，而是转而执行下一次循环。")]),s._v(" "),a("p",[s._v("同样可以带有标签：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("continue")]),s._v(" labelname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("不管continue语句带不带标签，它只能在循环体内使用。")]),s._v(" "),a("p",[s._v("在不同类型的循环中，continue行为有所区别：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://giriawsh-bucket.oss-cn-beijing.aliyuncs.com/img/20201104235016.png",alt:"image-20201104235016141"}})]),s._v(" "),a("p",[a("img",{attrs:{src:"https://giriawsh-bucket.oss-cn-beijing.aliyuncs.com/img/20201104235025.png",alt:"image-20201104235025009"}})]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("continue语句在while和for循环中的区别")]),s._v(" "),a("p",[s._v("while循环直接进入下一轮的循环条件判断。")]),s._v(" "),a("p",[s._v("for循环首先计算其increment表达式，然后判断循环条件。")]),s._v(" "),a("p",[s._v("由于continue在两种循环中的行为表现不同，因此使用while循环不可能完美地模拟等价的for循环")])]),s._v(" "),a("p",[s._v("和break语句类似，带标签的continue语句可以用在嵌套的循环中，用以跳出多层次嵌套的循环体逻辑。")]),s._v(" "),a("h3",{attrs:{id:"return语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#return语句"}},[s._v("#")]),s._v(" return语句")]),s._v(" "),a("p",[s._v("语法：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" expression\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("return语句只能在函数体内出现，如果不是的话会报语法错误。")]),s._v(" "),a("p",[s._v("如果没有return语句，执行函数体内语句后返回调用程序，调用表达式的结果是undefined。")]),s._v(" "),a("p",[s._v("return语句可以单独使用而不必带有expression，这样的话函数也会向调用程序返回undefined。")]),s._v(" "),a("h3",{attrs:{id:"throw语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#throw语句"}},[s._v("#")]),s._v(" throw语句")]),s._v(" "),a("p",[s._v("**异常：**当发生了某种异常情况或错误时产生的一个信号。")]),s._v(" "),a("p",[a("strong",[s._v("抛出异常")]),s._v("：用信号通知发生了错误或异常情况。")]),s._v(" "),a("p",[s._v("**捕获异常：**处理这个信号，采取必要的手段从异常中回复。")]),s._v(" "),a("p",[s._v("使用try/catch/finally可以捕获异常。")]),s._v(" "),a("p",[s._v("throw语句的语法如下：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throw")]),s._v(" expression\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("expression的值可以是任意类型。可以抛出一个代表错误码的数字，或者包含可读的错误消息的字符串。")]),s._v(" "),a("p",[s._v("当JS解释器抛出异常的时候通常采用Error类型和其子类型。")]),s._v(" "),a("p",[a("u",[s._v("一个Error对象有一个name属性表示错误类型，一个message类型用来存放传递给构造函数的字符串。")])]),s._v(" "),a("p",[s._v("例子如下：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://giriawsh-bucket.oss-cn-beijing.aliyuncs.com/img/20201105000221.png",alt:"image-20201105000221547"}})]),s._v(" "),a("p",[s._v("当抛出异常时，JS解释器会立即停止当前正在执行的逻辑，并跳转至"),a("strong",[s._v("就近")]),s._v("的异常处理程序。（异常处理程序时用try/catch/finally语句的catch从句编写的。）")]),s._v(" "),a("p",[s._v("如果抛出异常的代码块没有一条相关联的catch从句，解释器会检查更高层的闭合代码块，以此类推，直到找到一个异常处理程序为止。")]),s._v(" "),a("p",[s._v("这样的话，异常就会沿着JS方法的词法结构和调用栈"),a("strong",[s._v("向上传播")]),s._v("，如果最终没有找到任何异常处理程序，JS将把异常当成"),a("strong",[s._v("程序错误")]),s._v("来处理，并报告给用户。")]),s._v(" "),a("h3",{attrs:{id:"try-catch-finally语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#try-catch-finally语句"}},[s._v("#")]),s._v(" try/catch/finally语句")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("try从句定义了需要处理的异常所在的代码块。")])]),s._v(" "),a("li",[a("p",[s._v("catch从句跟随在try从句之后，当try块内某处发生了异常时，调用catch内的代码逻辑。")])]),s._v(" "),a("li",[a("p",[s._v("catch从句后跟随finally块，后者中放置清理代码，不管try块中是否产生异常，finally块内的逻辑总是会执行。")])])]),s._v(" "),a("p",[s._v("尽管catch和finally都是可选，但try从句需要至少二者之一与之组成完成的语句。")]),s._v(" "),a("p",[s._v("花括号是必须的，绝对不能省略。")]),s._v(" "),a("p",[s._v("语法和使用目的：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://giriawsh-bucket.oss-cn-beijing.aliyuncs.com/img/20201105000734.png",alt:"image-20201105000734019"}})]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("catch(e)")]),s._v(" "),a("p",[s._v("catch的圆括号内是一个标识符，和函数参数很像。")]),s._v(" "),a("p",[s._v("当捕获一个异常时，把和这个异常相关的值（比如Error对象）赋值给这个参数。")]),s._v(" "),a("p",[s._v("和普通变量不同，这条catch子句中的标识符具有块级作用域，它只在catch语句块内有定义。")])]),s._v(" "),a("p",[s._v("finally从句通常在try从句的代码后用于清理工作。")]),s._v(" "),a("p",[s._v("当由于return、continue、break语句使得解释器跳出try语句块时，解释器在执行新的目标代码之前先执行finally块中的逻辑。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("finally")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"finally"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"outside"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// =>")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("finally")]),s._v("\noutside\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("p",[s._v("可以看到finally先被执行了。")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("如果try中产生了异常，而且存在一条与之相关的catch从句来处理这个异常，解释器会首先执行catch中的逻辑，然后执行finally中的逻辑。")])]),s._v(" "),a("li",[a("p",[s._v("如果不存在处理异常的局部catch从句，解释器会首先执行finally中的逻辑，然后向上传播这个异常，直到找到能处理这个异常的catch从句。")])])]),s._v(" "),a("p",[s._v("如果"),a("strong",[s._v("finally块使用了return、continue、break、throw语句")]),s._v("使程序发生跳转，或者通过调用了抛出异常的犯法改变了执行流程，不管这个跳转使程序挂起还是继续执行，"),a("strong",[s._v("解释器都会将原本的异常忽略")]),s._v("。")]),s._v(" "),a("p",[s._v("例如：如果finally从句抛出一个异常，这个异常将替代正在抛出的异常。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://giriawsh-bucket.oss-cn-beijing.aliyuncs.com/img/20201105141100.png",alt:"image-20201105141053017"}})]),s._v(" "),a("p",[s._v("如果finally从句运行到了return语句，尽管已经抛出了异常且这个抛出的异常还没有处理，这个方法依然会正常返回。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://giriawsh-bucket.oss-cn-beijing.aliyuncs.com/img/20201105141111.png",alt:"image-20201105141111730"}})]),s._v(" "),a("p",[s._v("在没有catch从句的情况下try从句可以和finally从句一起使用，在这种情况下finally块值包含清理代码，且一定会执行。")]),s._v(" "),a("p",[s._v("如果使用try/finally语句，就能使用while循环来正确模拟包含continue的for循环：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://giriawsh-bucket.oss-cn-beijing.aliyuncs.com/img/20201105142226.png",alt:"image-20201105142226608"}})]),s._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[s._v("当body包含break语句时")]),s._v(" "),a("p",[s._v("while循环和for循环有了更微妙的区别：")]),s._v(" "),a("ul",[a("li",[s._v("由于finally块中一定会被执行，因此上述等价while循环会进行一次额外的自增运算。")]),s._v(" "),a("li",[s._v("但是for循环并不会")])]),s._v(" "),a("p",[s._v("看下面的实例：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("finally")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        x"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//=> 1 因为在finally中无法避免地进行了一次自增运算")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" x"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("break")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// => 0 直接break将不会进行自增运算")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("p",[s._v("因此即使使用了finally，使用while来完全模拟for循环依然是不可能的。")])]),s._v(" "),a("h2",{attrs:{id:"其他语句类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他语句类型"}},[s._v("#")]),s._v(" 其他语句类型")]),s._v(" "),a("h3",{attrs:{id:"with语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#with语句"}},[s._v("#")]),s._v(" with语句")]),s._v(" "),a("p",[s._v("第三章中有提到作用域链，一个可以按序检索的对象列表，通过它可以进行变量名解析。")]),s._v(" "),a("p",[s._v("with语句用于"),a("strong",[s._v("临时扩展作用域链")]),s._v("。语法如下：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("with")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nstatement\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("p",[s._v("这条语句将object添加到作用域链的头部，然后执行statement，最后把作用域链恢复到原始状态。")]),s._v(" "),a("p",[s._v("在严格模式中，禁止使用with语句，在非严格模式也是不推荐，尽可能避免使用with。")]),s._v(" "),a("p",[s._v("那些使用with语句的JS代码"),a("u",[s._v("非常难于优化")]),s._v("，同没有使用with语句的代码相比，它"),a("u",[s._v("运行得更慢")]),s._v("。")]),s._v(" "),a("p",[s._v("在对象嵌套层次很深的时候会使用with语句来简化代码编写。")]),s._v(" "),a("p",[s._v("例如在客户端JS中，可能会使用类似这种表达式来访问一个HTML表单中的元素：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("forms"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("address"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("value\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("这种代码多次出现时，可以使用with语句将form对象添加至作用域链的顶层：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("with")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("forms"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//直接访问表单元素，例如：")]),s._v("\n\tname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("value "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\taddress"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("value "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//等价于上面的document.forms[0].address.value")]),s._v("\n\temail"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("value "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("这种方法减少了大量地输入，不用再为每个属性名添加"),a("code",[s._v("document.forms[0]")]),s._v("前缀。")]),s._v(" "),a("p",[s._v("这个对象临时挂在在作用域链上，当JS需要解析注入address的标识符时，就会"),a("u",[s._v("自动首先在这个对象中查找")]),s._v("。")]),s._v(" "),a("p",[s._v("不适用with语句的等价代码如下：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" f "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("forms"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("value "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("address"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("value "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("email"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("value "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[s._v("注意！")]),s._v(" "),a("p",[s._v("只有在查找标识符的时候才会用到作用域链，创建新的变量的时候不适用它。")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("with")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("如果对象o中有一个属性，那么这行代码给这个属性赋值为1。")]),s._v(" "),a("p",[s._v("但如果o中没有定义属性x，这段代码等价于：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://giriawsh-bucket.oss-cn-beijing.aliyuncs.com/img/20201105150358.png",alt:"image-20201105150358434"}})]),s._v(" "),a("p",[a("strong",[s._v("with语句提供了一种读取o的属性的快捷方式，但它并不能创建o的属性")]),s._v("！")])]),s._v(" "),a("h3",{attrs:{id:"debugger语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#debugger语句"}},[s._v("#")]),s._v(" debugger语句")]),s._v(" "),a("p",[s._v("debugger语句通常什么也不做。实际上，这条语句用来产生一个断点，JS代码的执行会停止在断点的位置，这时可以使用调试器输出变量的值、检查调用栈等。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://giriawsh-bucket.oss-cn-beijing.aliyuncs.com/img/20201105150933.png",alt:"image-20201105150933137"}})]),s._v(" "),a("p",[s._v("这时，当调用f()的时候没有传入参数，程序将停止执行，这时可以通过调试器检测调用栈并找出错误产生的原因。")]),s._v(" "),a("p",[s._v("在ES5中，debugger语句正式加入到这门语言里，它不会启动调试器。但如果调试器已经在运行中，这条语句才会真正产生一个断点。")]),s._v(" "),a("h3",{attrs:{id:"use-strict"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#use-strict"}},[s._v("#")]),s._v(" “use strict”")]),s._v(" "),a("p",[s._v('"use strict"是ES5引入的一条指令（不是语句，但非常接近）。')]),s._v(" "),a("p",[s._v('"user strict"指令和普通的语句之间有两个重要的区别：')]),s._v(" "),a("p",[a("img",{attrs:{src:"https://giriawsh-bucket.oss-cn-beijing.aliyuncs.com/img/20201105151228.png",alt:"image-20201105151228197"}})]),s._v(" "),a("p",[a("img",{attrs:{src:"https://giriawsh-bucket.oss-cn-beijing.aliyuncs.com/img/20201105151238.png",alt:"image-20201105151237998"}})]),s._v(" "),a("p",[s._v('使用"use strict"指令的目的是说明（脚本或函数中）后续的代码将会解析为严格代码。')]),s._v(" "),a("p",[s._v('如果顶层（不在任何函数内）使用了"use strict"指令，那么它们就是严格代码。')]),s._v(" "),a("p",[s._v('如果函数体定义所处的代码是严格代码或者函数体使用了"use strict"指令，那么函数体的代码时严格代码。')]),s._v(" "),a("p",[s._v('如果eval()调用时所处的代码是严格代码或者eval()要执行的字符串中使用了"strict code"指令，则eval()内的代码是严格代码。')]),s._v(" "),a("p",[s._v("严格模式和非严格模式之间的区别如下（前三条尤为重要）：")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://giriawsh-bucket.oss-cn-beijing.aliyuncs.com/img/20201105152437.png",alt:"image-20201105152437163"}})]),s._v(" "),a("p",[a("img",{attrs:{src:"https://giriawsh-bucket.oss-cn-beijing.aliyuncs.com/img/20201105152449.png",alt:"image-20201105152449227"}})]),s._v(" "),a("h2",{attrs:{id:"javascript语句小结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript语句小结"}},[s._v("#")]),s._v(" JavaScript语句小结")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://giriawsh-bucket.oss-cn-beijing.aliyuncs.com/img/20201105152726.png",alt:"image-20201105152725989"}})]),s._v(" "),a("p",[a("img",{attrs:{src:"https://giriawsh-bucket.oss-cn-beijing.aliyuncs.com/img/20201105152741.png",alt:"image-20201105152740887"}})])])}),[],!1,null,null,null);t.default=e.exports}}]);